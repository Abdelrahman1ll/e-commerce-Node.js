name: CI with Docker

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  e-commerce:
    # النظام المطلوب
    runs-on: ubuntu-latest

    steps:
      # 1. نسخ الكود
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. تأكد من Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3. إنشاء ملف .env
      - name: Create .env file
        run: |
          cat > .env << EOF
          NODE_ENV: development
          APP_REPLICAS: 1
          PORT: ${{ secrets.PORT || '3000' }}
          BASE_URL: ${{ secrets.BASE_URL || 'http://localhost:3000' }}
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          MONGODB_URI_TEST: ${{ secrets.MONGODB_URI_TEST }}
          REDIS_URL: ${{ secrets.REDIS_URL }}
          JWT_SECRET_REFRESH: ${{ secrets.JWT_SECRET_REFRESH }}
          JWT_SECRET_ACCESS: ${{ secrets.JWT_SECRET_ACCESS }}
          JWT_EXPIRES_IN_REFRESH: ${{ secrets.JWT_EXPIRES_IN_REFRESH }}
          JWT_EXPIRES_IN_ACCESS: ${{ secrets.JWT_EXPIRES_IN_ACCESS }}
          EMAIL_USER: ${{ secrets.EMAIL_USER }}
          EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
          JWT_SECRET_EMAIL: ${{ secrets.JWT_SECRET_EMAIL }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          FOLDER_ID: ${{ secrets.FOLDER_ID }}
          EOF

      # 4. شغل الكونتينرات
      - name: Build and Run with Docker Compose
        run: docker compose up --build -d
        
      # 4. انتظار حتى تكون الخدمات جاهزة
      - name: Wait for services to be ready
        run: |
          echo "Waiting for services to start..."
          sleep 30
          docker compose ps

      # 5. شغل الاختبارات داخل الكونتينر
      - name: Run tests
        run: |
          # استخدم اسم الخدمة من docker-compose.yml بدلاً من اسم الكونتينر
          docker compose exec e-commerce npm run test

      # 6. عرض سجلات الأخطاء في حالة الفشل
      - name: Show logs on failure
        if: failure()
        run: |
          echo "=== Container logs ==="
          docker compose logs

      # 7. إيقاف وتنظيف الكونتينرات
      - name: Stop and cleanup services
        if: always()
        run: |
          docker compose down -v
          docker system prune -f
